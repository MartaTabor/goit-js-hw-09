{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAIbO,SAASC,cAAc,SAASC,iBAAiB,UAAU,SAAUC,GACnEA,EAAMC,iBACN,MAAMC,EAAQC,SAASC,KAAKC,SAAgB,MAAEC,OACxCC,EAAOJ,SAASC,KAAKC,SAAe,KAAEC,OACtCE,EAASL,SAASC,KAAKC,SAAiB,OAAEC,OAEhD,IAAK,IAAIG,EAAI,EAAGA,EAAID,EAAQC,IAAK,CAE/BrB,EAAcqB,EAAI,EADGP,EAAQO,EAAIF,GAE9BG,MAAKC,IACJ,MAAMtB,SAAEA,EAAQC,MAAEA,GAAUqB,EAC5BC,EAAA1B,GAAS2B,OAAOC,QAAQ,qBAAqBzB,QAAeC,MAAU,IAEvEyB,OAAMC,IACL,MAAM3B,SAAEA,EAAQC,MAAEA,GAAU0B,EAC5BJ,EAAA1B,GAAS2B,OAAOI,QAAQ,oBAAoB5B,QAAeC,MAAU,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n\ndocument.querySelector('.form').addEventListener('submit', function (event) {\n  event.preventDefault();\n  const delay = parseInt(this.elements['delay'].value);\n  const step = parseInt(this.elements['step'].value);\n  const amount = parseInt(this.elements['amount'].value);\n\n  for (let i = 0; i < amount; i++) {\n    const currentDelay = delay + i * step;\n    createPromise(i + 1, currentDelay)\n      .then(result => {\n        const { position, delay } = result;\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(error => {\n        const { position, delay } = error;\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n  }\n});\n"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","document","querySelector","addEventListener","event","preventDefault","delay1","parseInt","this","elements","value","step","amount","i","then","result","$parcel$interopDefault","Notify","success","catch","error","failure"],"version":3,"file":"03-promises.1612b280.js.map"}